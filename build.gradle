buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE')
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    repositories {
        mavenLocal()
        mavenCentral()
    }

    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }

        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter')
        compile('org.projectlombok:lombok')
//        compile('org.springframework.boot:spring-boot-starter-data-elasticsearch:2.0.2')
//        compile group: 'org.elasticsearch', name: 'elasticsearch', version: '5.6.0'
        testCompile("org.springframework.boot:spring-boot-starter-test")
//        testCompile('org.springframework.security:spring-security-test')
    }
}


/*
project(':rest-api') {
    dependencies {
        compile project(':common')
    }
}

project(':web') {
    dependencies {
        compile project(':common')
    }
}*/